/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.md-carrousel{width:100%;position:relative}.md-carrousel--nav{width:100%;text-align:center}.md-carrousel--nav ul{margin:0;padding:0}.md-carrousel--nav ul li{width:10px;height:10px;border-radius:50%;display:inline-block;border:2px solid #3498db;cursor:pointer;margin:5px 3px}.md-carrousel--nav ul li:hover{transition:all .3s linear;border-color:#848484;background:#848484;transform:scale(1.3)}.md-carrousel--nav ul .active{background:#3498db}.header{width:100%;max-height:600px;background:url(../img/bg-pattern.png) repeat-x;display:inline-block;position:relative}@media only screen and (min-width:940px){.header__left-box{width:470px;float:left;margin-top:150px}}@media only screen and (min-width:641px) and (max-width:941px){.header__left-box{width:300px;float:left;margin-top:110px}}@media only screen and (max-width:640px){.header__left-box{width:100%;padding:0 30px;float:left;margin-top:10px;text-align:center}}.header__left-box--description{text-shadow:-2px 3px 0 rgba(0,0,0,.25);font-family:Lato,sans-serif;font-size:24px;font-weight:400;color:#fff}.header__left-box--social{width:100%}.header__left-box--social .ico{font-size:24px;width:52px;height:52px;display:inline-block;background:#000;color:#fff;text-decoration:none;padding-top:13px;border-radius:50%;box-sizing:border-box;text-align:center;opacity:.5;margin:0 5px}.header__left-box--social .ico:hover{opacity:1}.header__img-right{position:relative}@media only screen and (min-width:940px){.header__img-right{width:415px;height:485px;margin-top:93px;float:right}}@media only screen and (min-width:641px) and (max-width:941px){.header__img-right{width:300px;height:351px;margin-top:80px;float:right}}.header__img-right img{width:100%;height:auto}@media only screen and (max-width:640px){.header__img-right{width:100%;height:274px;float:left;text-align:center}.header__img-right img{display:none}}.header__img-right--mobile{width:250px;height:254px;margin-top:20px;background:url(../img/img-phone-mobile.png) no-repeat}@media only screen and (min-width:641px){.header__img-right--mobile{display:none}}@media only screen and (max-width:640px){.header__img-right--mobile{display:inline-block}}.nav ul{list-style:none}div,nav,section{box-sizing:border-box}a{transition:all .4s linear}.main{position:relative}.content{width:100%;max-width:1220px;padding:10px 20px;margin:0 auto}.btn-blue{background:#0d74b9;font-family:Lato,sans-serif;font-size:16px;font-weight:700;color:#222;color:#fff;padding:10px 15px;text-decoration:none;display:inline-block}.btn-blue:hover{background:#fff;color:#3498db}.footer{background:#e7e7e7;text-align:center;box-sizing:border-box}@media only screen and (max-width:500px){.footer{padding:15px 10px!important}}.footer--link{font-family:Lato,sans-serif;font-size:16px;font-weight:400;color:#848484;text-decoration:none;margin:0 10px}@media only screen and (max-width:500px){.footer--link{width:100%;display:inline-block;margin:5px 0}}.footer--link:hover{color:#3498db}.about,.comments,.cont,.features,.footer,.pricing-plans{width:100%;display:inline-block;position:relative;padding:60px 0}.content-title{font-size:30px;font-weight:700;color:#222}.content-subtitle,.content-title{font-family:Lato,sans-serif;margin:0 0 20px;text-align:center}.content-subtitle{font-size:16px;font-weight:400;color:#848484;line-height:26px}.features__grid{width:100%;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.features__grid--col{-ms-flex-positive:1;flex-grow:1;text-align:center;position:relative}@media only screen and (min-width:641px){.features__grid--col{width:33%;padding:40px 10px}}@media only screen and (min-width:401px) and (max-width:640px){.features__grid--col{width:50%;padding:20px 10px}}@media only screen and (max-width:400px){.features__grid--col{width:100%}}@media only screen and (min-width:641px){.features__grid--col:first-child:after,.features__grid--col:nth-child(4):after,.features__grid--col:nth-child(-n+3):before{display:none}}@media only screen and (min-width:401px) and (max-width:640px){.features__grid--col:first-child:after,.features__grid--col:nth-child(3):after,.features__grid--col:nth-child(5):after,.features__grid--col:nth-child(-n+2):before{display:none}}@media only screen and (max-width:400px){.features__grid--col{margin-bottom:5px;padding-top:15px}.features__grid--col:first-child:before{display:none}.features__grid--col:after{border:none!important}}.features__grid--col:before{content:" ";border-top:1px solid #e7e7e7;position:absolute;width:80%;left:10%;top:0}.features__grid--col:after{content:" ";border-left:1px solid #e7e7e7;position:absolute;height:90%;left:0;top:5%}.features__grid--col--title{font-family:Lato,sans-serif;font-size:24px;font-weight:600;color:#222;line-height:26px;margin:20px 0 30px}.features__grid--col--description{font-family:Lato,sans-serif;font-size:16px;font-weight:400;color:#848484;line-height:26px}.about{background:#e7e7e7}.about__col-text{display:inline-block}@media only screen and (min-width:941px){.about__col-text{width:52%}}@media only screen and (min-width:800px) and (max-width:940px){.about__col-text{width:40%}}.about__col-text--title{text-align:left}.about__col-text--text{line-height:26px}.about__col-text--list,.about__col-text--text{font-family:Lato,sans-serif;font-size:16px;font-weight:400;color:#848484}.about__col-text--list{line-height:32px;padding:0;margin-left:20px;display:block;position:relative}.about__col-text--list li{list-style:none;padding-left:20px;position:relative}.about__col-text--list li:before{content:"\f054";font-family:FontAwesome;position:absolute;left:0;top:1px;font-size:16px;color:#222}.about__video{display:inline-block}.about__video video{background-size:cover;background:transparent url(../img/poster-video.png) no-repeat 0 0}@media only screen and (min-width:941px){.about__video{width:40%;margin-left:7%}}@media only screen and (min-width:800px) and (max-width:940px){.about__video{width:55%;margin-left:4%}}.about__video video{width:100%}.comments__carrousel{text-align:center}.comments__carrousel--phrase{font-family:Lato,sans-serif;font-size:24px;font-weight:400;color:#848484;line-height:32px;font-style:italic;margin:0}.comments__carrousel--author{font-family:Lato,sans-serif;font-size:16px;font-weight:600;color:#222}.pricing-plans{text-align:center}.pricing-plans:after{content:" ";width:100%;height:620px;background:#e7e7e7;position:absolute;z-index:-1;left:0;top:0}.pricing-plans__grid{width:100%;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;-webkit-align-items:center;-webkit-box-align:center}.pricing-plans__grid--price-box{-ms-flex-positive:1;flex-grow:1;-ms-flex-pack:distribute;justify-content:space-around;vertical-align:middle}@media only screen and (min-width:641px){.pricing-plans__grid--price-box{width:25%;padding:0 2px}}@media only screen and (max-width:640px){.pricing-plans__grid--price-box{width:100%;margin:10px 0}}.pricing-plans__grid--price-box--ident{background:#3498db;width:100%;float:left;font-family:Lato,sans-serif;font-size:28px;font-weight:600;color:#fff;text-align:center;padding:15px 0;margin:0}.pricing-plans__grid--price-box--price{background:#fff;width:100%;float:left;font-family:Lato,sans-serif;font-size:42px;font-weight:900;color:#222;text-align:center;padding:10px 0;margin:0}.pricing-plans__grid--price-box--price sup{font-size:24px}.pricing-plans__grid--price-box--list-items{background:#fff;width:100%;float:left;text-align:center;padding:0;margin:0}.pricing-plans__grid--price-box--list-items li{list-style:none;margin:0;font-family:Lato,sans-serif;font-size:16px;font-weight:400;color:#848484;padding:12px 0;border-top:1px solid #e7e7e7}.pricing-plans__grid--price-box--list-items li:last-child{border-bottom:none}.pricing-plans__grid--price-box--button{background:#3498db;width:100%;float:left;text-align:center;padding:15px 0}.pricing-plans__get-touch{margin-top:50px}.pricing-plans__get-touch--social{text-align:center}.pricing-plans__get-touch--social .ico{font-size:20px;width:40px;height:40px;display:inline-block;background:#d4d4d4;color:#fff;text-decoration:none;padding-top:11px;border-radius:50%;box-sizing:border-box;text-align:center;margin:0 1px}.pricing-plans__get-touch--social .ico:hover{background:#3498db}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
